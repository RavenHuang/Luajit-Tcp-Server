static const int __STDC__ = 1;
static const int __STDC_HOSTED__ = 1;
static const int __GNUC__ = 4;
static const int __GNUC_MINOR__ = 2;
static const int __GNUC_PATCHLEVEL__ = 1;
static const int __APPLE_CC__ = 5658;
static const int __llvm__ = 1;
static const int __SIZE_TYPE__ = long unsigned int;
static const int __PTRDIFF_TYPE__ = long int;
static const int __WCHAR_TYPE__ = int;
static const int __WINT_TYPE__ = int;
static const int __INTMAX_TYPE__ = long int;
static const int __UINTMAX_TYPE__ = long unsigned int;
static const int __GXX_ABI_VERSION = 1002;
static const int __SCHAR_MAX__ = 127;
static const int __SHRT_MAX__ = 32767;
static const int __INT_MAX__ = 2147483647;
static const long __LONG_MAX__ = 9223372036854775807L;
static const long long __LONG_LONG_MAX__ = 9223372036854775807LL;
static const int __WCHAR_MAX__ = 2147483647;
static const int __CHAR_BIT__ = 8;
static const long __INTMAX_MAX__ = 9223372036854775807L;
static const int __FLT_EVAL_METHOD__ = 0;
static const int __DEC_EVAL_METHOD__ = 2;
static const int __FLT_RADIX__ = 2;
static const int __FLT_MANT_DIG__ = 24;
static const int __FLT_DIG__ = 6;
static const int __FLT_MIN_EXP__ = (-125);
static const int __FLT_MIN_10_EXP__ = (-37);
static const int __FLT_MAX_EXP__ = 128;
static const int __FLT_MAX_10_EXP__ = 38;
static const double __FLT_MAX__ = 3.40282347e+38F;
static const double __FLT_MIN__ = 1.17549435e-38F;
static const double __FLT_EPSILON__ = 1.19209290e-7F;
static const double __FLT_DENORM_MIN__ = 1.40129846e-45F;
static const int __FLT_HAS_DENORM__ = 1;
static const int __FLT_HAS_INFINITY__ = 1;
static const int __FLT_HAS_QUIET_NAN__ = 1;
static const int __DBL_MANT_DIG__ = 53;
static const int __DBL_DIG__ = 15;
static const int __DBL_MIN_EXP__ = (-1021);
static const int __DBL_MIN_10_EXP__ = (-307);
static const int __DBL_MAX_EXP__ = 1024;
static const int __DBL_MAX_10_EXP__ = 308;
static const double __DBL_MAX__ = 1.7976931348623157e+308;
static const double __DBL_MIN__ = 2.2250738585072014e-308;
static const double __DBL_EPSILON__ = 2.2204460492503131e-16;
static const double __DBL_DENORM_MIN__ = 4.9406564584124654e-324;
static const int __DBL_HAS_DENORM__ = 1;
static const int __DBL_HAS_INFINITY__ = 1;
static const int __DBL_HAS_QUIET_NAN__ = 1;
static const int __LDBL_MANT_DIG__ = 64;
static const int __LDBL_DIG__ = 18;
static const int __LDBL_MIN_EXP__ = (-16381);
static const int __LDBL_MIN_10_EXP__ = (-4931);
static const int __LDBL_MAX_EXP__ = 16384;
static const int __LDBL_MAX_10_EXP__ = 4932;
static const int __DECIMAL_DIG__ = 21;
static const long __LDBL_MAX__ = 1.18973149535723176502e+4932L;
static const long __LDBL_MIN__ = 3.36210314311209350626e-4932L;
static const long __LDBL_EPSILON__ = 1.08420217248550443401e-19L;
static const long __LDBL_DENORM_MIN__ = 3.64519953188247460253e-4951L;
static const int __LDBL_HAS_DENORM__ = 1;
static const int __LDBL_HAS_INFINITY__ = 1;
static const int __LDBL_HAS_QUIET_NAN__ = 1;
static const int __DEC32_MANT_DIG__ = 7;
static const int __DEC32_MIN_EXP__ = (-95);
static const int __DEC32_MAX_EXP__ = 96;
static const double __DEC32_MIN__ = 1E-95DF;
static const double __DEC32_MAX__ = 9.999999E96DF;
static const double __DEC32_EPSILON__ = 1E-6DF;
static const double __DEC32_DEN__ = 0.000001E-95DF;
static const int __DEC64_MANT_DIG__ = 16;
static const int __DEC64_MIN_EXP__ = (-383);
static const int __DEC64_MAX_EXP__ = 384;
static const double __DEC64_MIN__ = 1E-383DD;
static const double __DEC64_MAX__ = 9.999999999999999E384DD;
static const double __DEC64_EPSILON__ = 1E-15DD;
static const double __DEC64_DEN__ = 0.000000000000001E-383DD;
static const int __DEC128_MANT_DIG__ = 34;
static const int __DEC128_MIN_EXP__ = (-6143);
static const int __DEC128_MAX_EXP__ = 6144;
static const long double __DEC128_MIN__ = 1E-6143DL;
static const long double __DEC128_MAX__ = 9.999999999999999999999999999999999E6144DL;
static const long double __DEC128_EPSILON__ = 1E-33DL;
static const long double __DEC128_DEN__ = 0.000000000000000000000000000000001E-6143DL;
static const int __USER_LABEL_PREFIX__ = _;
static const char __VERSION__ = "4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)";
static const int __GNUC_GNU_INLINE__ = 1;
static const int _LP64 = 1;
static const int __LP64__ = 1;
static const int __BLOCKS__ = 1;
static const int __NO_INLINE__ = 1;
static const int __FINITE_MATH_ONLY__ = 0;
static const int __pic__ = 2;
static const int __PIC__ = 2;
static const int __SSP__ = 1;
static const int __amd64 = 1;
static const int __amd64__ = 1;
static const int __x86_64 = 1;
static const int __x86_64__ = 1;
static const int __tune_core2__ = 1;
static const int __MMX__ = 1;
static const int __SSE__ = 1;
static const int __SSE2__ = 1;
static const int __SSE3__ = 1;
static const int __SSE_MATH__ = 1;
static const int __SSE2_MATH__ = 1;
static const int __k8 = 1;
static const int __k8__ = 1;
static const int __NO_MATH_INLINES = 1;
static const int __LITTLE_ENDIAN__ = 1;
static const int __MACH__ = 1;
static const int __APPLE__ = 1;
static const int __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ = 1083;
static const int __CONSTANT_CFSTRINGS__ = 1;
static const int __weak = __attribute__((objc_gc(weak)));
static const int __block = __attribute__((__blocks__(byref)));
static const int OBJC_NEW_PROPERTIES = 1;
static const int __DYNAMIC__ = 1;
static const int __P(protos) = protos;
static const int __CONCAT(x,y) = x ## y;
static const int __STRING(x) = #x;
static const int __const = const;
static const int __signed = signed;
static const int __volatile = volatile;
static const int __dead2 = __attribute__((noreturn));
static const int __pure2 = __attribute__((const));
static const int __unused = __attribute__((unused));
static const int __used = __attribute__((used));
static const int __deprecated = __attribute__((deprecated));
static const int __unavailable = __attribute__((unavailable));
static const int __printflike(fmtarg,firstvararg) = __attribute__((__format__ (__printf__, fmtarg, firstvararg)));
static const int __scanflike(fmtarg,firstvararg) = __attribute__((__format__ (__scanf__, fmtarg, firstvararg)));
static const int __IDSTRING(name,string) = static const char name[] __used = string;
static const int __COPYRIGHT(s) = __IDSTRING(copyright,s);
static const int __RCSID(s) = __IDSTRING(rcsid,s);
static const int __SCCSID(s) = __IDSTRING(sccsid,s);
static const int __PROJECT_VERSION(s) = __IDSTRING(project_version,s);
static const int __DARWIN_ONLY_64_BIT_INO_T = 0;
static const int __DARWIN_ONLY_VERS_1050 = 0;
static const int __DARWIN_ONLY_UNIX_CONFORMANCE = 1;
static const int __DARWIN_UNIX03 = 1;
static const int __DARWIN_64_BIT_INO_T = 1;
static const int __DARWIN_VERS_1050 = 1;
static const int __DARWIN_NON_CANCELABLE = 0;
static const char __DARWIN_SUF_64_BIT_INO_T = "$INODE64";
static const char __DARWIN_SUF_1050 = "$1050";
static const char __DARWIN_SUF_EXTSN = "$DARWIN_EXTSN";
static const int __DARWIN_ALIAS(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_UNIX03);
static const int __DARWIN_ALIAS_C(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03);
static const int __DARWIN_ALIAS_I(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03);
static const int __DARWIN_INODE64(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T);
static const int __DARWIN_1050(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_1050);
static const int __DARWIN_1050ALIAS(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_UNIX03);
static const int __DARWIN_1050ALIAS_C(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03);
static const int __DARWIN_1050ALIAS_I(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03);
static const int __DARWIN_1050INODE64(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T);
static const int __DARWIN_EXTSN(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_EXTSN);
static const int __DARWIN_EXTSN_C(sym) = __asm("_" __STRING(sym) __DARWIN_SUF_EXTSN __DARWIN_SUF_NON_CANCELABLE);
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x) = x;
static const int __DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x) = x;
static const int __DARWIN_ALIAS_STARTING(_mac,_iphone,x) = __DARWIN_ALIAS_STARTING_MAC_ ##_mac(x);
static const int __POSIX_C_DEPRECATED(ver) = ___POSIX_C_DEPRECATED_STARTING_ ##ver;
static const long __DARWIN_C_ANSI = 010000L;
static const long __DARWIN_C_FULL = 900000L;
static const int __DARWIN_C_LEVEL = __DARWIN_C_FULL;
static const int __DARWIN_NO_LONG_LONG = (defined(__STRICT_ANSI__) && (__STDC_VERSION__-0 < 199901L) && !defined(__GNUG__));
static const int _DARWIN_FEATURE_64_BIT_INODE = 1;
static const int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = 1;
static const int _DARWIN_FEATURE_UNIX_CONFORMANCE = 3;
static const int __CAST_AWAY_QUALIFIER(variable,qualifier,type) = (type) (long)(variable);
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;
typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
typedef int __darwin_ct_rune_t;
typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;
typedef __mbstate_t __darwin_mbstate_t;
typedef long int __darwin_ptrdiff_t;
typedef long unsigned int __darwin_size_t;
typedef __builtin_va_list __darwin_va_list;
typedef int __darwin_wchar_t;
typedef __darwin_wchar_t __darwin_rune_t;
typedef int __darwin_wint_t;
typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;
static const int __PTHREAD_SIZE__ = 1168;
static const int __PTHREAD_ATTR_SIZE__ = 56;
static const int __PTHREAD_MUTEXATTR_SIZE__ = 8;
static const int __PTHREAD_MUTEX_SIZE__ = 56;
static const int __PTHREAD_CONDATTR_SIZE__ = 8;
static const int __PTHREAD_COND_SIZE__ = 40;
static const int __PTHREAD_ONCE_SIZE__ = 8;
static const int __PTHREAD_RWLOCK_SIZE__ = 192;
static const int __PTHREAD_RWLOCKATTR_SIZE__ = 16;
struct __darwin_pthread_handler_rec
{
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};
struct _opaque_pthread_attr_t { long __sig; char __opaque[56]; };
struct _opaque_pthread_cond_t { long __sig; char __opaque[40]; };
struct _opaque_pthread_condattr_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_mutex_t { long __sig; char __opaque[56]; };
struct _opaque_pthread_mutexattr_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_once_t { long __sig; char __opaque[8]; };
struct _opaque_pthread_rwlock_t { long __sig; char __opaque[192]; };
struct _opaque_pthread_rwlockattr_t { long __sig; char __opaque[16]; };
struct _opaque_pthread_t { long __sig; struct __darwin_pthread_handler_rec *__cleanup_stack; char __opaque[1168]; };
static const int __DARWIN_NULL = ((void *)0);
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;
typedef __darwin_ino64_t __darwin_ino_t;
typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef struct _opaque_pthread_attr_t
   __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t
   __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t
   __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t
   __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t
   __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t
   __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t
   __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t
   __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t
   *__darwin_pthread_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;
typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];
static const int __strfmonlike(fmtarg,firstvararg) = __attribute__((__format__ (__strfmon__, fmtarg, firstvararg)));
static const int __strftimelike(fmtarg) = __attribute__((__format__ (__strftime__, fmtarg, 0)));
typedef int __darwin_nl_item;
typedef int __darwin_wctrans_t;
typedef __uint32_t __darwin_wctype_t;
static const int __DARWIN_WCHAR_MAX = __WCHAR_MAX__;
static const int __DARWIN_WCHAR_MIN = (-0x7fffffff - 1);
static const int __DARWIN_WEOF = ((__darwin_wint_t)-1);
static const int _FORTIFY_SOURCE = 2;
static const long _POSIX_VERSION = 200112L;
static const long _POSIX2_VERSION = 200112L;
static const int _POSIX_VDISABLE = ((unsigned char)'\377');
static const int _POSIX_THREAD_KEYS_MAX = 128;
static const int F_OK = 0;
static const int X_OK = (1<<0);
static const int W_OK = (1<<1);
static const int R_OK = (1<<2);
static const int _READ_OK = (1<<9);
static const int _WRITE_OK = (1<<10);
static const int _EXECUTE_OK = (1<<11);
static const int _DELETE_OK = (1<<12);
static const int _APPEND_OK = (1<<13);
static const int _RMFILE_OK = (1<<14);
static const int _RATTR_OK = (1<<15);
static const int _WATTR_OK = (1<<16);
static const int _REXT_OK = (1<<17);
static const int _WEXT_OK = (1<<18);
static const int _RPERM_OK = (1<<19);
static const int _WPERM_OK = (1<<20);
static const int _CHOWN_OK = (1<<21);
static const int _ACCESS_EXTENDED_MASK = (_READ_OK | _WRITE_OK | _EXECUTE_OK | _DELETE_OK | _APPEND_OK | _RMFILE_OK | _REXT_OK | _WEXT_OK | _RATTR_OK | _WATTR_OK | _RPERM_OK | _WPERM_OK | _CHOWN_OK);
static const int SEEK_SET = 0;
static const int SEEK_CUR = 1;
static const int SEEK_END = 2;
static const int L_SET = SEEK_SET;
static const int L_INCR = SEEK_CUR;
static const int L_XTND = SEEK_END;
struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
static const int ACCESSX_MAX_DESCRIPTORS = 100;
static const int ACCESSX_MAX_TABLESIZE = (16 * 1024);
static const int _PC_LINK_MAX = 1;
static const int _PC_MAX_CANON = 2;
static const int _PC_MAX_INPUT = 3;
static const int _PC_NAME_MAX = 4;
static const int _PC_PATH_MAX = 5;
static const int _PC_PIPE_BUF = 6;
static const int _PC_CHOWN_RESTRICTED = 7;
static const int _PC_NO_TRUNC = 8;
static const int _PC_VDISABLE = 9;
static const int _PC_NAME_CHARS_MAX = 10;
static const int _PC_CASE_SENSITIVE = 11;
static const int _PC_CASE_PRESERVING = 12;
static const int _PC_EXTENDED_SECURITY_NP = 13;
static const int _PC_AUTH_OPAQUE_NP = 14;
static const int _PC_2_SYMLINKS = 15;
static const int _PC_ALLOC_SIZE_MIN = 16;
static const int _PC_ASYNC_IO = 17;
static const int _PC_FILESIZEBITS = 18;
static const int _PC_PRIO_IO = 19;
static const int _PC_REC_INCR_XFER_SIZE = 20;
static const int _PC_REC_MAX_XFER_SIZE = 21;
static const int _PC_REC_MIN_XFER_SIZE = 22;
static const int _PC_REC_XFER_ALIGN = 23;
static const int _PC_SYMLINK_MAX = 24;
static const int _PC_SYNC_IO = 25;
static const int _PC_XATTR_SIZE_BITS = 26;
static const int _CS_PATH = 1;
static const int __MAC_10_0 = 1000;
static const int __MAC_10_1 = 1010;
static const int __MAC_10_2 = 1020;
static const int __MAC_10_3 = 1030;
static const int __MAC_10_4 = 1040;
static const int __MAC_10_5 = 1050;
static const int __MAC_10_6 = 1060;
static const int __MAC_10_7 = 1070;
static const int __MAC_10_8 = 1080;
static const int __MAC_NA = 9999;
static const int __IPHONE_2_0 = 20000;
static const int __IPHONE_2_1 = 20100;
static const int __IPHONE_2_2 = 20200;
static const int __IPHONE_3_0 = 30000;
static const int __IPHONE_3_1 = 30100;
static const int __IPHONE_3_2 = 30200;
static const int __IPHONE_4_0 = 40000;
static const int __IPHONE_4_1 = 40100;
static const int __IPHONE_4_2 = 40200;
static const int __IPHONE_4_3 = 40300;
static const int __IPHONE_5_0 = 50000;
static const int __IPHONE_5_1 = 50100;
static const int __IPHONE_NA = 99999;
static const int __AVAILABILITY_INTERNAL_DEPRECATED = __attribute__((deprecated,visibility("default")));
static const int __AVAILABILITY_INTERNAL_UNAVAILABLE = __attribute__((unavailable,visibility("default")));
static const int __AVAILABILITY_INTERNAL_WEAK_IMPORT = __attribute__((weak_import,visibility("default")));
static const int __AVAILABILITY_INTERNAL_REGULAR = __attribute__((visibility("default")));
static const int __MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__;
static const int __MAC_OS_X_VERSION_MAX_ALLOWED = __MAC_10_8;
static const int __AVAILABILITY_INTERNAL__MAC_10_8 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_7 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_6 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_5 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_4 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_3 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_2 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_1 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_10_0 = __AVAILABILITY_INTERNAL_REGULAR;
static const int __AVAILABILITY_INTERNAL__MAC_NA = __AVAILABILITY_INTERNAL_UNAVAILABLE;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8 = __AVAILABILITY_INTERNAL_DEPRECATED;
static const int __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_0;
static const int __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_1;
static const int __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_2;
static const int __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_3;
static const int __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_4;
static const int __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_5;
static const int __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_6;
static const int __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_7;
static const int __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA = __AVAILABILITY_INTERNAL__MAC_10_8;
static const int __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA = __AVAILABILITY_INTERNAL_UNAVAILABLE;
static const int __OSX_AVAILABLE_STARTING(_osx,_ios) = __AVAILABILITY_INTERNAL ##_osx;
static const int __OSX_AVAILABLE_BUT_DEPRECATED(_osxIntro,_osxDep,_iosIntro,_iosDep) = __AVAILABILITY_INTERNAL ##_osxIntro ##_DEP ##_osxDep;
typedef __darwin_gid_t gid_t;
typedef __darwin_intptr_t intptr_t;
typedef __darwin_off_t off_t;
typedef __darwin_pid_t pid_t;
typedef __darwin_size_t size_t;
typedef __darwin_ssize_t ssize_t;
typedef __darwin_uid_t uid_t;
typedef __darwin_useconds_t useconds_t;
static const int NULL = __DARWIN_NULL;
static const int STDIN_FILENO = 0;
static const int STDOUT_FILENO = 1;
static const int STDERR_FILENO = 2;
static const int _XOPEN_VERSION = 600;
static const int _XOPEN_XCU_VERSION = 4;
static const int _POSIX_ADVISORY_INFO = (-1);
static const int _POSIX_ASYNCHRONOUS_IO = (-1);
static const int _POSIX_BARRIERS = (-1);
static const long _POSIX_CHOWN_RESTRICTED = 200112L;
static const int _POSIX_CLOCK_SELECTION = (-1);
static const int _POSIX_CPUTIME = (-1);
static const long _POSIX_FSYNC = 200112L;
static const long _POSIX_IPV6 = 200112L;
static const long _POSIX_JOB_CONTROL = 200112L;
static const long _POSIX_MAPPED_FILES = 200112L;
static const int _POSIX_MEMLOCK = (-1);
static const int _POSIX_MEMLOCK_RANGE = (-1);
static const long _POSIX_MEMORY_PROTECTION = 200112L;
static const int _POSIX_MESSAGE_PASSING = (-1);
static const int _POSIX_MONOTONIC_CLOCK = (-1);
static const long _POSIX_NO_TRUNC = 200112L;
static const int _POSIX_PRIORITIZED_IO = (-1);
static const int _POSIX_PRIORITY_SCHEDULING = (-1);
static const int _POSIX_RAW_SOCKETS = (-1);
static const long _POSIX_READER_WRITER_LOCKS = 200112L;
static const int _POSIX_REALTIME_SIGNALS = (-1);
static const long _POSIX_REGEXP = 200112L;
static const long _POSIX_SAVED_IDS = 200112L;
static const int _POSIX_SEMAPHORES = (-1);
static const int _POSIX_SHARED_MEMORY_OBJECTS = (-1);
static const long _POSIX_SHELL = 200112L;
static const int _POSIX_SPAWN = (-1);
static const int _POSIX_SPIN_LOCKS = (-1);
static const int _POSIX_SPORADIC_SERVER = (-1);
static const int _POSIX_SYNCHRONIZED_IO = (-1);
static const long _POSIX_THREAD_ATTR_STACKADDR = 200112L;
static const long _POSIX_THREAD_ATTR_STACKSIZE = 200112L;
static const int _POSIX_THREAD_CPUTIME = (-1);
static const int _POSIX_THREAD_PRIO_INHERIT = (-1);
static const int _POSIX_THREAD_PRIO_PROTECT = (-1);
static const int _POSIX_THREAD_PRIORITY_SCHEDULING = (-1);
static const long _POSIX_THREAD_PROCESS_SHARED = 200112L;
static const long _POSIX_THREAD_SAFE_FUNCTIONS = 200112L;
static const int _POSIX_THREAD_SPORADIC_SERVER = (-1);
static const long _POSIX_THREADS = 200112L;
static const int _POSIX_TIMEOUTS = (-1);
static const int _POSIX_TIMERS = (-1);
static const int _POSIX_TRACE = (-1);
static const int _POSIX_TRACE_EVENT_FILTER = (-1);
static const int _POSIX_TRACE_INHERIT = (-1);
static const int _POSIX_TRACE_LOG = (-1);
static const int _POSIX_TYPED_MEMORY_OBJECTS = (-1);
static const long _POSIX2_C_BIND = 200112L;
static const long _POSIX2_C_DEV = 200112L;
static const long _POSIX2_CHAR_TERM = 200112L;
static const int _POSIX2_FORT_DEV = (-1);
static const long _POSIX2_FORT_RUN = 200112L;
static const long _POSIX2_LOCALEDEF = 200112L;
static const int _POSIX2_PBS = (-1);
static const int _POSIX2_PBS_ACCOUNTING = (-1);
static const int _POSIX2_PBS_CHECKPOINT = (-1);
static const int _POSIX2_PBS_LOCATE = (-1);
static const int _POSIX2_PBS_MESSAGE = (-1);
static const int _POSIX2_PBS_TRACK = (-1);
static const long _POSIX2_SW_DEV = 200112L;
static const long _POSIX2_UPE = 200112L;
static const int __ILP32_OFF32 = (-1);
static const int __ILP32_OFFBIG = (1);
static const int __LP64_OFF64 = (1);
static const int __LPBIG_OFFBIG = (1);
static const int _POSIX_V6_ILP32_OFF32 = __ILP32_OFF32;
static const int _POSIX_V6_ILP32_OFFBIG = __ILP32_OFFBIG;
static const int _POSIX_V6_LP64_OFF64 = __LP64_OFF64;
static const int _POSIX_V6_LPBIG_OFFBIG = __LPBIG_OFFBIG;
static const int _POSIX_V7_ILP32_OFF32 = __ILP32_OFF32;
static const int _POSIX_V7_ILP32_OFFBIG = __ILP32_OFFBIG;
static const int _POSIX_V7_LP64_OFF64 = __LP64_OFF64;
static const int _POSIX_V7_LPBIG_OFFBIG = __LPBIG_OFFBIG;
static const int _V6_ILP32_OFF32 = __ILP32_OFF32;
static const int _V6_ILP32_OFFBIG = __ILP32_OFFBIG;
static const int _V6_LP64_OFF64 = __LP64_OFF64;
static const int _V6_LPBIG_OFFBIG = __LPBIG_OFFBIG;
static const int _XBS5_ILP32_OFF32 = __ILP32_OFF32;
static const int _XBS5_ILP32_OFFBIG = __ILP32_OFFBIG;
static const int _XBS5_LP64_OFF64 = __LP64_OFF64;
static const int _XBS5_LPBIG_OFFBIG = __LPBIG_OFFBIG;
static const int _XOPEN_CRYPT = (1);
static const int _XOPEN_ENH_I18N = (1);
static const int _XOPEN_LEGACY = (-1);
static const int _XOPEN_REALTIME = (-1);
static const int _XOPEN_REALTIME_THREADS = (-1);
static const int _XOPEN_SHM = (1);
static const int _XOPEN_STREAMS = (-1);
static const int _XOPEN_UNIX = (1);
static const int _SC_ARG_MAX = 1;
static const int _SC_CHILD_MAX = 2;
static const int _SC_CLK_TCK = 3;
static const int _SC_NGROUPS_MAX = 4;
static const int _SC_OPEN_MAX = 5;
static const int _SC_JOB_CONTROL = 6;
static const int _SC_SAVED_IDS = 7;
static const int _SC_VERSION = 8;
static const int _SC_BC_BASE_MAX = 9;
static const int _SC_BC_DIM_MAX = 10;
static const int _SC_BC_SCALE_MAX = 11;
static const int _SC_BC_STRING_MAX = 12;
static const int _SC_COLL_WEIGHTS_MAX = 13;
static const int _SC_EXPR_NEST_MAX = 14;
static const int _SC_LINE_MAX = 15;
static const int _SC_RE_DUP_MAX = 16;
static const int _SC_2_VERSION = 17;
static const int _SC_2_C_BIND = 18;
static const int _SC_2_C_DEV = 19;
static const int _SC_2_CHAR_TERM = 20;
static const int _SC_2_FORT_DEV = 21;
static const int _SC_2_FORT_RUN = 22;
static const int _SC_2_LOCALEDEF = 23;
static const int _SC_2_SW_DEV = 24;
static const int _SC_2_UPE = 25;
static const int _SC_STREAM_MAX = 26;
static const int _SC_TZNAME_MAX = 27;
static const int _SC_ASYNCHRONOUS_IO = 28;
static const int _SC_PAGESIZE = 29;
static const int _SC_MEMLOCK = 30;
static const int _SC_MEMLOCK_RANGE = 31;
static const int _SC_MEMORY_PROTECTION = 32;
static const int _SC_MESSAGE_PASSING = 33;
static const int _SC_PRIORITIZED_IO = 34;
static const int _SC_PRIORITY_SCHEDULING = 35;
static const int _SC_REALTIME_SIGNALS = 36;
static const int _SC_SEMAPHORES = 37;
static const int _SC_FSYNC = 38;
static const int _SC_SHARED_MEMORY_OBJECTS = 39;
static const int _SC_SYNCHRONIZED_IO = 40;
static const int _SC_TIMERS = 41;
static const int _SC_AIO_LISTIO_MAX = 42;
static const int _SC_AIO_MAX = 43;
static const int _SC_AIO_PRIO_DELTA_MAX = 44;
static const int _SC_DELAYTIMER_MAX = 45;
static const int _SC_MQ_OPEN_MAX = 46;
static const int _SC_MAPPED_FILES = 47;
static const int _SC_RTSIG_MAX = 48;
static const int _SC_SEM_NSEMS_MAX = 49;
static const int _SC_SEM_VALUE_MAX = 50;
static const int _SC_SIGQUEUE_MAX = 51;
static const int _SC_TIMER_MAX = 52;
static const int _SC_NPROCESSORS_CONF = 57;
static const int _SC_NPROCESSORS_ONLN = 58;
static const int _SC_2_PBS = 59;
static const int _SC_2_PBS_ACCOUNTING = 60;
static const int _SC_2_PBS_CHECKPOINT = 61;
static const int _SC_2_PBS_LOCATE = 62;
static const int _SC_2_PBS_MESSAGE = 63;
static const int _SC_2_PBS_TRACK = 64;
static const int _SC_ADVISORY_INFO = 65;
static const int _SC_BARRIERS = 66;
static const int _SC_CLOCK_SELECTION = 67;
static const int _SC_CPUTIME = 68;
static const int _SC_FILE_LOCKING = 69;
static const int _SC_GETGR_R_SIZE_MAX = 70;
static const int _SC_GETPW_R_SIZE_MAX = 71;
static const int _SC_HOST_NAME_MAX = 72;
static const int _SC_LOGIN_NAME_MAX = 73;
static const int _SC_MONOTONIC_CLOCK = 74;
static const int _SC_MQ_PRIO_MAX = 75;
static const int _SC_READER_WRITER_LOCKS = 76;
static const int _SC_REGEXP = 77;
static const int _SC_SHELL = 78;
static const int _SC_SPAWN = 79;
static const int _SC_SPIN_LOCKS = 80;
static const int _SC_SPORADIC_SERVER = 81;
static const int _SC_THREAD_ATTR_STACKADDR = 82;
static const int _SC_THREAD_ATTR_STACKSIZE = 83;
static const int _SC_THREAD_CPUTIME = 84;
static const int _SC_THREAD_DESTRUCTOR_ITERATIONS = 85;
static const int _SC_THREAD_KEYS_MAX = 86;
static const int _SC_THREAD_PRIO_INHERIT = 87;
static const int _SC_THREAD_PRIO_PROTECT = 88;
static const int _SC_THREAD_PRIORITY_SCHEDULING = 89;
static const int _SC_THREAD_PROCESS_SHARED = 90;
static const int _SC_THREAD_SAFE_FUNCTIONS = 91;
static const int _SC_THREAD_SPORADIC_SERVER = 92;
static const int _SC_THREAD_STACK_MIN = 93;
static const int _SC_THREAD_THREADS_MAX = 94;
static const int _SC_TIMEOUTS = 95;
static const int _SC_THREADS = 96;
static const int _SC_TRACE = 97;
static const int _SC_TRACE_EVENT_FILTER = 98;
static const int _SC_TRACE_INHERIT = 99;
static const int _SC_TRACE_LOG = 100;
static const int _SC_TTY_NAME_MAX = 101;
static const int _SC_TYPED_MEMORY_OBJECTS = 102;
static const int _SC_V6_ILP32_OFF32 = 103;
static const int _SC_V6_ILP32_OFFBIG = 104;
static const int _SC_V6_LP64_OFF64 = 105;
static const int _SC_V6_LPBIG_OFFBIG = 106;
static const int _SC_IPV6 = 118;
static const int _SC_RAW_SOCKETS = 119;
static const int _SC_SYMLOOP_MAX = 120;
static const int _SC_ATEXIT_MAX = 107;
static const int _SC_IOV_MAX = 56;
static const int _SC_PAGE_SIZE = _SC_PAGESIZE;
static const int _SC_XOPEN_CRYPT = 108;
static const int _SC_XOPEN_ENH_I18N = 109;
static const int _SC_XOPEN_LEGACY = 110;
static const int _SC_XOPEN_REALTIME = 111;
static const int _SC_XOPEN_REALTIME_THREADS = 112;
static const int _SC_XOPEN_SHM = 113;
static const int _SC_XOPEN_STREAMS = 114;
static const int _SC_XOPEN_UNIX = 115;
static const int _SC_XOPEN_VERSION = 116;
static const int _SC_XOPEN_XCU_VERSION = 121;
static const int _SC_XBS5_ILP32_OFF32 = 122;
static const int _SC_XBS5_ILP32_OFFBIG = 123;
static const int _SC_XBS5_LP64_OFF64 = 124;
static const int _SC_XBS5_LPBIG_OFFBIG = 125;
static const int _SC_SS_REPL_MAX = 126;
static const int _SC_TRACE_EVENT_NAME_MAX = 127;
static const int _SC_TRACE_NAME_MAX = 128;
static const int _SC_TRACE_SYS_MAX = 129;
static const int _SC_TRACE_USER_EVENT_MAX = 130;
static const int _SC_PASS_MAX = 131;
static const int _CS_POSIX_V6_ILP32_OFF32_CFLAGS = 2;
static const int _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 3;
static const int _CS_POSIX_V6_ILP32_OFF32_LIBS = 4;
static const int _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 5;
static const int _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 6;
static const int _CS_POSIX_V6_ILP32_OFFBIG_LIBS = 7;
static const int _CS_POSIX_V6_LP64_OFF64_CFLAGS = 8;
static const int _CS_POSIX_V6_LP64_OFF64_LDFLAGS = 9;
static const int _CS_POSIX_V6_LP64_OFF64_LIBS = 10;
static const int _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 11;
static const int _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 12;
static const int _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 13;
static const int _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = 14;
static const int _CS_XBS5_ILP32_OFF32_CFLAGS = 20;
static const int _CS_XBS5_ILP32_OFF32_LDFLAGS = 21;
static const int _CS_XBS5_ILP32_OFF32_LIBS = 22;
static const int _CS_XBS5_ILP32_OFF32_LINTFLAGS = 23;
static const int _CS_XBS5_ILP32_OFFBIG_CFLAGS = 24;
static const int _CS_XBS5_ILP32_OFFBIG_LDFLAGS = 25;
static const int _CS_XBS5_ILP32_OFFBIG_LIBS = 26;
static const int _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 27;
static const int _CS_XBS5_LP64_OFF64_CFLAGS = 28;
static const int _CS_XBS5_LP64_OFF64_LDFLAGS = 29;
static const int _CS_XBS5_LP64_OFF64_LIBS = 30;
static const int _CS_XBS5_LP64_OFF64_LINTFLAGS = 31;
static const int _CS_XBS5_LPBIG_OFFBIG_CFLAGS = 32;
static const int _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 33;
static const int _CS_XBS5_LPBIG_OFFBIG_LIBS = 34;
static const int _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 35;
static const int _CS_DARWIN_USER_DIR = 65536;
static const int _CS_DARWIN_USER_TEMP_DIR = 65537;
static const int _CS_DARWIN_USER_CACHE_DIR = 65538;
void _exit(int) __attribute__((noreturn));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);
int close(int) __asm("_" "close" );
int dup(int);
int dup2(int, int);
int execl(const char *, const char *, ...);
int execle(const char *, const char *, ...);
int execlp(const char *, const char *, ...);
int execv(const char *, char * const *);
int execve(const char *, char * const *, char * const *);
int execvp(const char *, char * const *);
pid_t fork(void);
long fpathconf(int, int);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);
int getgroups(int, gid_t []);
char *getlogin(void);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
int isatty(int);
int link(const char *, const char *);
off_t lseek(int, off_t, int);
long pathconf(const char *, int);
int pause(void) __asm("_" "pause" );
int pipe(int [2]);
ssize_t read(int, void *, size_t) __asm("_" "read" );
int rmdir(const char *);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
int setuid(uid_t);
unsigned int
  sleep(unsigned int) __asm("_" "sleep" );
long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
char *ttyname(int);
int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );
int unlink(const char *);
ssize_t write(int, const void *, size_t) __asm("_" "write" );
size_t confstr(int, char *, size_t) __asm("_" "confstr" );
int getopt(int, char * const [], const char *) __asm("_" "getopt" );
extern char *optarg;
extern int optind, opterr, optopt;
static const int F_ULOCK = 0;
static const int F_LOCK = 1;
static const int F_TLOCK = 2;
static const int F_TEST = 3;
void *brk(const void *);
int chroot(const char *) ;
char *crypt(const char *, const char *);
static const int __CTERMID_DEFINED = 1;
char *ctermid(char *);
void encrypt(char *, int) __asm("_" "encrypt" );
int fchdir(int);
long gethostid(void);
pid_t getpgid(pid_t);
pid_t getsid(pid_t);
int getdtablesize(void) ;
int getpagesize(void) __attribute__((const)) ;
char *getpass(const char *) ;
char *getwd(char *) ;
int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );
int lockf(int, int, off_t) __asm("_" "lockf" );
int nice(int) __asm("_" "nice" );
ssize_t pread(int, void *, size_t, off_t) __asm("_" "pread" );
ssize_t pwrite(int, const void *, size_t, off_t) __asm("_" "pwrite" );
void *sbrk(int);
pid_t setpgrp(void) __asm("_" "setpgrp" );
int setregid(gid_t, gid_t) __asm("_" "setregid" );
int setreuid(uid_t, uid_t) __asm("_" "setreuid" );
void swab(const void * , void * , ssize_t);
void sync(void);
int truncate(const char *, off_t);
useconds_t ualarm(useconds_t, useconds_t);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void);
int fsync(int) __asm("_" "fsync" );
int ftruncate(int, off_t);
int getlogin_r(char *, size_t);
int fchown(int, uid_t, gid_t);
int gethostname(char *, size_t);
ssize_t readlink(const char * , char * , size_t);
int setegid(gid_t);
int seteuid(uid_t);
int symlink(const char *, const char *);
static const int _STRUCT_TIMESPEC = struct timespec;
struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};
static const int _STRUCT_TIMEVAL = struct timeval;
struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};
static const int __DARWIN_FD_SETSIZE = 1024;
static const int __DARWIN_NBBY = 8;
static const int __DARWIN_NFDBITS = (sizeof(__int32_t) * __DARWIN_NBBY);
static const int __DARWIN_howmany(x,y) = ((((x) % (y)) == 0) ? ((x) / (y)) : (((x) / (y)) + 1));
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;
static __inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return (_p->fds_bits[_n/(sizeof(__int32_t) * 8)] & (1<<(_n % (sizeof(__int32_t) * 8))));
}
static const int __DARWIN_FD_SET(n,p) = do { int __fd = (n); ((p)->fds_bits[__fd/__DARWIN_NFDBITS] |= (1<<(__fd % __DARWIN_NFDBITS))); } while(0);
static const int __DARWIN_FD_CLR(n,p) = do { int __fd = (n); ((p)->fds_bits[__fd/__DARWIN_NFDBITS] &= ~(1<<(__fd % __DARWIN_NFDBITS))); } while(0);
static const int __DARWIN_FD_ISSET(n,p) = __darwin_fd_isset((n), (p));
static const int __DARWIN_FD_ZERO(p) = __builtin_bzero(p, sizeof(*(p)));
static const int __DARWIN_FD_COPY(f,t) = bcopy(f, t, sizeof(*(f)));
typedef __darwin_time_t time_t;
typedef __darwin_suseconds_t suseconds_t;
typedef __darwin_sigset_t sigset_t;
static const int FD_SETSIZE = __DARWIN_FD_SETSIZE;
static const int FD_SET(n,p) = __DARWIN_FD_SET(n, p);
static const int FD_CLR(n,p) = __DARWIN_FD_CLR(n, p);
static const int FD_ISSET(n,p) = __DARWIN_FD_ISSET(n, p);
static const int FD_ZERO(p) = __DARWIN_FD_ZERO(p);
static const int FD_COPY(f,t) = __DARWIN_FD_COPY(f, t);
int pselect(int, fd_set * , fd_set * ,
  fd_set * , const struct timespec * ,
  const sigset_t * )
  __asm("_" "pselect" "$1050")
  ;
int select(int, fd_set * , fd_set * ,
  fd_set * , struct timeval * )
  __asm("_" "select" "$1050")
  ;
typedef __darwin_dev_t dev_t;
typedef __darwin_mode_t mode_t;
typedef __darwin_uuid_t uuid_t;
void _Exit(int) __attribute__((noreturn));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int);
void endusershell(void);
int execvP(const char *, const char *, char * const *);
char *fflagstostr(unsigned long);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);
int gethostuuid(uuid_t, const struct timespec *) __attribute__((visibility("default")));
mode_t getmode(const void *, mode_t);
int getpeereid(int, uid_t *, gid_t *);
int getsgroups_np(int *, uuid_t);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int iruserok(unsigned long, int, const char *, const char *);
int iruserok_sa(const void *, int, int, const char *, const char *);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkpath_np(const char *path, mode_t omode) __attribute__((visibility("default")));
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);
int rcmd(char **, int, const char *, const char *, const char *, int *);
int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
int reboot(int);
int revoke(const char *);
int rresvport(int *);
int rresvport_af(int *, int);
int ruserok(const char *, int, const char *, const char *);
int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);
void setkey(const char *) __asm("_" "setkey" );
int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int syscall(int, ...);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);
extern char *suboptarg;
int getsubopt(char **, char * const *, char **);
int fgetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((visibility("default")));
int fsetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((visibility("default")));
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int);
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int);
struct fssearchblock;
struct searchstate;
int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *);
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int) __attribute__((visibility("default")));
static const int SYNC_VOLUME_FULLSYNC = 0x01;
static const int SYNC_VOLUME_WAIT = 0x02;
int fsync_volume_np(int, int) __attribute__((visibility("default")));
int sync_volume_np(const char *, int) __attribute__((visibility("default")));
extern int optreset;

static const int __STDC__ = 1;
static const int __STDC_HOSTED__ = 1;
static const int __GNUC__ = 4;
static const int __GNUC_MINOR__ = 7;
static const int __GNUC_PATCHLEVEL__ = 2;
static const char __VERSION__ = "4.7.2";
static const int __ATOMIC_RELAXED = 0;
static const int __ATOMIC_SEQ_CST = 5;
static const int __ATOMIC_ACQUIRE = 2;
static const int __ATOMIC_RELEASE = 3;
static const int __ATOMIC_ACQ_REL = 4;
static const int __ATOMIC_CONSUME = 1;
static const int __FINITE_MATH_ONLY__ = 0;
static const int __SIZEOF_INT__ = 4;
static const int __SIZEOF_LONG__ = 4;
static const int __SIZEOF_LONG_LONG__ = 8;
static const int __SIZEOF_SHORT__ = 2;
static const int __SIZEOF_FLOAT__ = 4;
static const int __SIZEOF_DOUBLE__ = 8;
static const int __SIZEOF_LONG_DOUBLE__ = 12;
static const int __SIZEOF_SIZE_T__ = 4;
static const int __CHAR_BIT__ = 8;
static const int __BIGGEST_ALIGNMENT__ = 16;
static const int __ORDER_LITTLE_ENDIAN__ = 1234;
static const int __ORDER_BIG_ENDIAN__ = 4321;
static const int __ORDER_PDP_ENDIAN__ = 3412;
static const int __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
static const int __FLOAT_WORD_ORDER__ = __ORDER_LITTLE_ENDIAN__;
static const int __SIZEOF_POINTER__ = 4;
static const int __SIZE_TYPE__ = unsigned int;
static const int __PTRDIFF_TYPE__ = int;
static const int __WCHAR_TYPE__ = int;
static const int __WINT_TYPE__ = unsigned int;
static const int __INTMAX_TYPE__ = long long int;
static const int __UINTMAX_TYPE__ = long long unsigned int;
static const int __CHAR16_TYPE__ = short unsigned int;
static const int __CHAR32_TYPE__ = unsigned int;
static const int __SIG_ATOMIC_TYPE__ = int;
static const int __INT8_TYPE__ = signed char;
static const int __INT16_TYPE__ = short int;
static const int __INT32_TYPE__ = int;
static const int __INT64_TYPE__ = long long int;
static const int __UINT8_TYPE__ = unsigned char;
static const int __UINT16_TYPE__ = short unsigned int;
static const int __UINT32_TYPE__ = unsigned int;
static const int __UINT64_TYPE__ = long long unsigned int;
static const int __INT_LEAST8_TYPE__ = signed char;
static const int __INT_LEAST16_TYPE__ = short int;
static const int __INT_LEAST32_TYPE__ = int;
static const int __INT_LEAST64_TYPE__ = long long int;
static const int __UINT_LEAST8_TYPE__ = unsigned char;
static const int __UINT_LEAST16_TYPE__ = short unsigned int;
static const int __UINT_LEAST32_TYPE__ = unsigned int;
static const int __UINT_LEAST64_TYPE__ = long long unsigned int;
static const int __INT_FAST8_TYPE__ = signed char;
static const int __INT_FAST16_TYPE__ = int;
static const int __INT_FAST32_TYPE__ = int;
static const int __INT_FAST64_TYPE__ = long long int;
static const int __UINT_FAST8_TYPE__ = unsigned char;
static const int __UINT_FAST16_TYPE__ = unsigned int;
static const int __UINT_FAST32_TYPE__ = unsigned int;
static const int __UINT_FAST64_TYPE__ = long long unsigned int;
static const int __INTPTR_TYPE__ = int;
static const int __UINTPTR_TYPE__ = unsigned int;
static const int __GXX_ABI_VERSION = 1002;
static const int __SCHAR_MAX__ = 127;
static const int __SHRT_MAX__ = 32767;
static const int __INT_MAX__ = 2147483647;
static const long __LONG_MAX__ = 2147483647L;
static const long long __LONG_LONG_MAX__ = 9223372036854775807LL;
static const int __WCHAR_MAX__ = 2147483647;
static const int __WCHAR_MIN__ = (-__WCHAR_MAX__ - 1);
static const int __WINT_MAX__ = 4294967295U;
static const int __WINT_MIN__ = 0U;
static const int __PTRDIFF_MAX__ = 2147483647;
static const int __SIZE_MAX__ = 4294967295U;
static const long long __INTMAX_MAX__ = 9223372036854775807LL;
static const int __INTMAX_C(c) = c ## LL;
static const int __UINTMAX_MAX__ = 18446744073709551615ULL;
static const int __UINTMAX_C(c) = c ## ULL;
static const int __SIG_ATOMIC_MAX__ = 2147483647;
static const int __SIG_ATOMIC_MIN__ = (-__SIG_ATOMIC_MAX__ - 1);
static const int __INT8_MAX__ = 127;
static const int __INT16_MAX__ = 32767;
static const int __INT32_MAX__ = 2147483647;
static const long long __INT64_MAX__ = 9223372036854775807LL;
static const int __UINT8_MAX__ = 255;
static const int __UINT16_MAX__ = 65535;
static const int __UINT32_MAX__ = 4294967295U;
static const int __UINT64_MAX__ = 18446744073709551615ULL;
static const int __INT_LEAST8_MAX__ = 127;
static const int __INT8_C(c) = c;
static const int __INT_LEAST16_MAX__ = 32767;
static const int __INT16_C(c) = c;
static const int __INT_LEAST32_MAX__ = 2147483647;
static const int __INT32_C(c) = c;
static const long long __INT_LEAST64_MAX__ = 9223372036854775807LL;
static const int __INT64_C(c) = c ## LL;
static const int __UINT_LEAST8_MAX__ = 255;
static const int __UINT8_C(c) = c;
static const int __UINT_LEAST16_MAX__ = 65535;
static const int __UINT16_C(c) = c;
static const int __UINT_LEAST32_MAX__ = 4294967295U;
static const int __UINT32_C(c) = c ## U;
static const int __UINT_LEAST64_MAX__ = 18446744073709551615ULL;
static const int __UINT64_C(c) = c ## ULL;
static const int __INT_FAST8_MAX__ = 127;
static const int __INT_FAST16_MAX__ = 2147483647;
static const int __INT_FAST32_MAX__ = 2147483647;
static const long long __INT_FAST64_MAX__ = 9223372036854775807LL;
static const int __UINT_FAST8_MAX__ = 255;
static const int __UINT_FAST16_MAX__ = 4294967295U;
static const int __UINT_FAST32_MAX__ = 4294967295U;
static const int __UINT_FAST64_MAX__ = 18446744073709551615ULL;
static const int __INTPTR_MAX__ = 2147483647;
static const int __UINTPTR_MAX__ = 4294967295U;
static const int __FLT_EVAL_METHOD__ = 2;
static const int __DEC_EVAL_METHOD__ = 2;
static const int __FLT_RADIX__ = 2;
static const int __FLT_MANT_DIG__ = 24;
static const int __FLT_DIG__ = 6;
static const int __FLT_MIN_EXP__ = (-125);
static const int __FLT_MIN_10_EXP__ = (-37);
static const int __FLT_MAX_EXP__ = 128;
static const int __FLT_MAX_10_EXP__ = 38;
static const int __FLT_DECIMAL_DIG__ = 9;
static const double __FLT_MAX__ = 3.40282346638528859812e+38F;
static const double __FLT_MIN__ = 1.17549435082228750797e-38F;
static const double __FLT_EPSILON__ = 1.19209289550781250000e-7F;
static const double __FLT_DENORM_MIN__ = 1.40129846432481707092e-45F;
static const int __FLT_HAS_DENORM__ = 1;
static const int __FLT_HAS_INFINITY__ = 1;
static const int __FLT_HAS_QUIET_NAN__ = 1;
static const int __DBL_MANT_DIG__ = 53;
static const int __DBL_DIG__ = 15;
static const int __DBL_MIN_EXP__ = (-1021);
static const int __DBL_MIN_10_EXP__ = (-307);
static const int __DBL_MAX_EXP__ = 1024;
static const int __DBL_MAX_10_EXP__ = 308;
static const int __DBL_DECIMAL_DIG__ = 17;
static const double __DBL_MAX__ = ((double)1.79769313486231570815e+308L);
static const double __DBL_MIN__ = ((double)2.22507385850720138309e-308L);
static const double __DBL_EPSILON__ = ((double)2.22044604925031308085e-16L);
static const double __DBL_DENORM_MIN__ = ((double)4.94065645841246544177e-324L);
static const int __DBL_HAS_DENORM__ = 1;
static const int __DBL_HAS_INFINITY__ = 1;
static const int __DBL_HAS_QUIET_NAN__ = 1;
static const int __LDBL_MANT_DIG__ = 64;
static const int __LDBL_DIG__ = 18;
static const int __LDBL_MIN_EXP__ = (-16381);
static const int __LDBL_MIN_10_EXP__ = (-4931);
static const int __LDBL_MAX_EXP__ = 16384;
static const int __LDBL_MAX_10_EXP__ = 4932;
static const int __DECIMAL_DIG__ = 21;
static const long __LDBL_MAX__ = 1.18973149535723176502e+4932L;
static const long __LDBL_MIN__ = 3.36210314311209350626e-4932L;
static const long __LDBL_EPSILON__ = 1.08420217248550443401e-19L;
static const long __LDBL_DENORM_MIN__ = 3.64519953188247460253e-4951L;
static const int __LDBL_HAS_DENORM__ = 1;
static const int __LDBL_HAS_INFINITY__ = 1;
static const int __LDBL_HAS_QUIET_NAN__ = 1;
static const int __DEC32_MANT_DIG__ = 7;
static const int __DEC32_MIN_EXP__ = (-94);
static const int __DEC32_MAX_EXP__ = 97;
static const double __DEC32_MIN__ = 1E-95DF;
static const double __DEC32_MAX__ = 9.999999E96DF;
static const double __DEC32_EPSILON__ = 1E-6DF;
static const double __DEC32_SUBNORMAL_MIN__ = 0.000001E-95DF;
static const int __DEC64_MANT_DIG__ = 16;
static const int __DEC64_MIN_EXP__ = (-382);
static const int __DEC64_MAX_EXP__ = 385;
static const double __DEC64_MIN__ = 1E-383DD;
static const double __DEC64_MAX__ = 9.999999999999999E384DD;
static const double __DEC64_EPSILON__ = 1E-15DD;
static const double __DEC64_SUBNORMAL_MIN__ = 0.000000000000001E-383DD;
static const int __DEC128_MANT_DIG__ = 34;
static const int __DEC128_MIN_EXP__ = (-6142);
static const int __DEC128_MAX_EXP__ = 6145;
static const long double __DEC128_MIN__ = 1E-6143DL;
static const long double __DEC128_MAX__ = 9.999999999999999999999999999999999E6144DL;
static const long double __DEC128_EPSILON__ = 1E-33DL;
static const long double __DEC128_SUBNORMAL_MIN__ = 0.000000000000000000000000000000001E-6143DL;
static const int _FORTIFY_SOURCE = 2;
static const int __GNUC_GNU_INLINE__ = 1;
static const int __NO_INLINE__ = 1;
static const int __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = 1;
static const int __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = 1;
static const int __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = 1;
static const int __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = 1;
static const int __GCC_ATOMIC_BOOL_LOCK_FREE = 2;
static const int __GCC_ATOMIC_CHAR_LOCK_FREE = 2;
static const int __GCC_ATOMIC_CHAR16_T_LOCK_FREE = 2;
static const int __GCC_ATOMIC_CHAR32_T_LOCK_FREE = 2;
static const int __GCC_ATOMIC_WCHAR_T_LOCK_FREE = 2;
static const int __GCC_ATOMIC_SHORT_LOCK_FREE = 2;
static const int __GCC_ATOMIC_INT_LOCK_FREE = 2;
static const int __GCC_ATOMIC_LONG_LOCK_FREE = 2;
static const int __GCC_ATOMIC_LLONG_LOCK_FREE = 2;
static const int __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = 1;
static const int __GCC_ATOMIC_POINTER_LOCK_FREE = 2;
static const int __GCC_HAVE_DWARF2_CFI_ASM = 1;
static const int __PRAGMA_REDEFINE_EXTNAME = 1;
static const int __SSP__ = 1;
static const int __SIZEOF_WCHAR_T__ = 4;
static const int __SIZEOF_WINT_T__ = 4;
static const int __SIZEOF_PTRDIFF_T__ = 4;
static const int __i386 = 1;
static const int __i386__ = 1;
static const int i386 = 1;
static const int __i686 = 1;
static const int __i686__ = 1;
static const int __pentiumpro = 1;
static const int __pentiumpro__ = 1;
static const int __gnu_linux__ = 1;
static const int __linux = 1;
static const int __linux__ = 1;
static const int linux = 1;
static const int __unix = 1;
static const int __unix__ = 1;
static const int unix = 1;
static const int __ELF__ = 1;
static const int __DECIMAL_BID_FORMAT__ = 1;
static const int _STDIO_H = 1;
static const int _FEATURES_H = 1;
static const int __USE_ANSI = 1;
static const int __GNUC_PREREQ(maj,min) = ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min));
static const int _BSD_SOURCE = 1;
static const int _SVID_SOURCE = 1;
static const int _POSIX_SOURCE = 1;
static const long _POSIX_C_SOURCE = 200809L;
static const int __USE_POSIX_IMPLICITLY = 1;
static const int __USE_POSIX = 1;
static const int __USE_POSIX2 = 1;
static const int __USE_POSIX199309 = 1;
static const int __USE_POSIX199506 = 1;
static const int __USE_XOPEN2K = 1;
static const int __USE_ISOC95 = 1;
static const int __USE_ISOC99 = 1;
static const int __USE_XOPEN2K8 = 1;
static const int _ATFILE_SOURCE = 1;
static const int __USE_MISC = 1;
static const int __USE_BSD = 1;
static const int __USE_SVID = 1;
static const int __USE_ATFILE = 1;
static const int __USE_FORTIFY_LEVEL = 0;
static const int __STDC_IEC_559__ = 1;
static const int __STDC_IEC_559_COMPLEX__ = 1;
static const long __STDC_ISO_10646__ = 200009L;
static const int __GNU_LIBRARY__ = 6;
static const int __GLIBC__ = 2;
static const int __GLIBC_MINOR__ = 15;
static const int __GLIBC_PREREQ(maj,min) = ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min));
static const int __GLIBC_HAVE_LONG_LONG = 1;
static const int _SYS_CDEFS_H = 1;
static const int __LEAF = , __leaf__;
static const int __LEAF_ATTR = __attribute__ ((__leaf__));
static const int __THROW = __attribute__ ((__nothrow__ __LEAF));
static const int __THROWNL = __attribute__ ((__nothrow__));
static const int __NTH(fct) = __attribute__ ((__nothrow__ __LEAF)) fct;
static const int __P(args) = args;
static const int __PMT(args) = args;
static const int __CONCAT(x,y) = x ## y;
static const int __STRING(x) = #x;
static const int __ptr_t = void *;
static const int __long_double_t = long double;
static const int __bos(ptr) = __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1);
static const int __bos0(ptr) = __builtin_object_size (ptr, 0);
static const int __warndecl(name,msg) = extern void name (void) __attribute__((__warning__ (msg)));
static const int __warnattr(msg) = __attribute__((__warning__ (msg)));
static const int __errordecl(name,msg) = extern void name (void) __attribute__((__error__ (msg)));
static const int __flexarr = [];
static const int __REDIRECT(name,proto,alias) = name proto __asm__ (__ASMNAME (#alias));
static const int __REDIRECT_NTH(name,proto,alias) = name proto __asm__ (__ASMNAME (#alias)) __THROW;
static const int __REDIRECT_NTHNL(name,proto,alias) = name proto __asm__ (__ASMNAME (#alias)) __THROWNL;
static const int __ASMNAME(cname) = __ASMNAME2 (__USER_LABEL_PREFIX__, cname);
static const int __ASMNAME2(prefix,cname) = __STRING (prefix) cname;
static const int __attribute_malloc__ = __attribute__ ((__malloc__));
static const int __attribute_pure__ = __attribute__ ((__pure__));
static const int __attribute_const__ = __attribute__ ((__const__));
static const int __attribute_used__ = __attribute__ ((__used__));
static const int __attribute_noinline__ = __attribute__ ((__noinline__));
static const int __attribute_deprecated__ = __attribute__ ((__deprecated__));
static const int __attribute_format_arg__(x) = __attribute__ ((__format_arg__ (x)));
static const int __attribute_format_strfmon__(a,b) = __attribute__ ((__format__ (__strfmon__, a, b)));
static const int __nonnull(params) = __attribute__ ((__nonnull__ params));
static const int __attribute_warn_unused_result__ = __attribute__ ((__warn_unused_result__));
static const int __always_inline = __inline __attribute__ ((__always_inline__));
static const int __extern_inline = extern __inline;
static const int __extern_always_inline = extern __always_inline __attribute__ ((__artificial__));
static const int __va_arg_pack() = __builtin_va_arg_pack ();
static const int __va_arg_pack_len() = __builtin_va_arg_pack_len ();
static const int __restrict_arr = __restrict;
static const int __WORDSIZE = 32;
static const int __LDBL_REDIR1(name,proto,alias) = name proto;
static const int __LDBL_REDIR(name,proto) = name proto;
static const int __LDBL_REDIR1_NTH(name,proto,alias) = name proto __THROW;
static const int __LDBL_REDIR_NTH(name,proto) = name proto __THROW;
static const int __REDIRECT_LDBL(name,proto,alias) = __REDIRECT (name, proto, alias);
static const int __REDIRECT_NTH_LDBL(name,proto,alias) = __REDIRECT_NTH (name, proto, alias);
static const int __WORDSIZE = 32;
typedef unsigned int size_t;
static const int NULL = ((void *)0);
static const int _BITS_TYPES_H = 1;
static const int __WORDSIZE = 32;
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;
__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
static const int __S16_TYPE = short int;
static const int __U16_TYPE = unsigned short int;
static const int __S32_TYPE = int;
static const int __U32_TYPE = unsigned int;
static const int __SLONGWORD_TYPE = long int;
static const int __ULONGWORD_TYPE = unsigned long int;
static const int __SQUAD_TYPE = __quad_t;
static const int __UQUAD_TYPE = __u_quad_t;
static const int __SWORD_TYPE = int;
static const int __UWORD_TYPE = unsigned int;
static const int __SLONG32_TYPE = long int;
static const int __ULONG32_TYPE = unsigned long int;
static const int __S64_TYPE = __quad_t;
static const int __U64_TYPE = __u_quad_t;
static const int __STD_TYPE = __extension__ typedef;
static const int _BITS_TYPESIZES_H = 1;
static const int __DEV_T_TYPE = __UQUAD_TYPE;
static const int __UID_T_TYPE = __U32_TYPE;
static const int __GID_T_TYPE = __U32_TYPE;
static const int __INO_T_TYPE = __ULONGWORD_TYPE;
static const int __INO64_T_TYPE = __UQUAD_TYPE;
static const int __MODE_T_TYPE = __U32_TYPE;
static const int __NLINK_T_TYPE = __UWORD_TYPE;
static const int __OFF_T_TYPE = __SLONGWORD_TYPE;
static const int __OFF64_T_TYPE = __SQUAD_TYPE;
static const int __PID_T_TYPE = __S32_TYPE;
static const int __RLIM_T_TYPE = __ULONGWORD_TYPE;
static const int __RLIM64_T_TYPE = __UQUAD_TYPE;
static const int __BLKCNT_T_TYPE = __SLONGWORD_TYPE;
static const int __BLKCNT64_T_TYPE = __SQUAD_TYPE;
static const int __FSBLKCNT_T_TYPE = __ULONGWORD_TYPE;
static const int __FSBLKCNT64_T_TYPE = __UQUAD_TYPE;
static const int __FSFILCNT_T_TYPE = __ULONGWORD_TYPE;
static const int __FSFILCNT64_T_TYPE = __UQUAD_TYPE;
static const int __ID_T_TYPE = __U32_TYPE;
static const int __CLOCK_T_TYPE = __SLONGWORD_TYPE;
static const int __TIME_T_TYPE = __SLONGWORD_TYPE;
static const int __USECONDS_T_TYPE = __U32_TYPE;
static const int __SUSECONDS_T_TYPE = __SLONGWORD_TYPE;
static const int __DADDR_T_TYPE = __S32_TYPE;
static const int __SWBLK_T_TYPE = __SLONGWORD_TYPE;
static const int __KEY_T_TYPE = __S32_TYPE;
static const int __CLOCKID_T_TYPE = __S32_TYPE;
static const int __TIMER_T_TYPE = void *;
static const int __BLKSIZE_T_TYPE = __SLONGWORD_TYPE;
static const int __FSID_T_TYPE = struct { int __val[2]; };
static const int __SSIZE_T_TYPE = __SWORD_TYPE;
static const int __FD_SETSIZE = 1024;
__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;
__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;
__extension__ typedef int __clockid_t;
__extension__ typedef void * __timer_t;
__extension__ typedef long int __blksize_t;
__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;
__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;
__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;
__extension__ typedef int __ssize_t;
typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;
__extension__ typedef int __intptr_t;
__extension__ typedef unsigned int __socklen_t;
struct _IO_FILE;
typedef struct _IO_FILE FILE;
static const int __FILE_defined = 1;
typedef struct _IO_FILE __FILE;
static const int ____FILE_defined = 1;
static const int _G_config_h = 1;
static const int NULL = ((void *)0);
static const int __mbstate_t_defined = 1;
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
static const int _G_size_t = size_t;
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
static const int _G_ssize_t = __ssize_t;
static const int _G_off_t = __off_t;
static const int _G_off64_t = __off64_t;
static const int _G_pid_t = __pid_t;
static const int _G_uid_t = __uid_t;
static const int _G_wchar_t = wchar_t;
static const int _G_wint_t = wint_t;
static const int _G_stat64 = stat64;
typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
static const int _G_HAVE_BOOL = 1;
static const int _G_HAVE_ATEXIT = 1;
static const int _G_HAVE_SYS_CDEFS = 1;
static const int _G_HAVE_SYS_WAIT = 1;
static const int _G_NEED_STDARG_H = 1;
static const int _G_va_list = __gnuc_va_list;
static const int _G_HAVE_PRINTF_FP = 1;
static const int _G_HAVE_MMAP = 1;
static const int _G_HAVE_MREMAP = 1;
static const int _G_HAVE_LONG_DOUBLE_IO = 1;
static const int _G_HAVE_IO_FILE_OPEN = 1;
static const int _G_HAVE_IO_GETLINE_INFO = 1;
static const int _G_IO_IO_FILE_VERSION = 0x20001;
static const int _G_OPEN64 = __open64;
static const int _G_LSEEK64 = __lseek64;
static const int _G_MMAP64 = __mmap64;
static const int _G_FSTAT64(fd,buf) = __fxstat64 (_STAT_VER, fd, buf);
static const int _G_HAVE_ST_BLKSIZE = defined (_STATBUF_ST_BLKSIZE);
static const int _G_BUFSIZ = 8192;
static const int _G_NAMES_HAVE_UNDERSCORE = 0;
static const int _G_VTABLE_LABEL_HAS_LENGTH = 1;
static const int _G_USING_THUNKS = 1;
static const char _G_VTABLE_LABEL_PREFIX = "__vt_";
static const int _G_VTABLE_LABEL_PREFIX_ID = __vt_;
static const int _G_ARGS(ARGLIST) = ARGLIST;
static const int _IO_pos_t = _G_fpos_t;
static const int _IO_fpos_t = _G_fpos_t;
static const int _IO_fpos64_t = _G_fpos64_t;
static const int _IO_size_t = _G_size_t;
static const int _IO_ssize_t = _G_ssize_t;
static const int _IO_off_t = _G_off_t;
static const int _IO_off64_t = _G_off64_t;
static const int _IO_pid_t = _G_pid_t;
static const int _IO_uid_t = _G_uid_t;
static const int _IO_iconv_t = _G_iconv_t;
static const int _IO_HAVE_SYS_WAIT = _G_HAVE_SYS_WAIT;
static const int _IO_HAVE_ST_BLKSIZE = _G_HAVE_ST_BLKSIZE;
static const int _IO_BUFSIZ = _G_BUFSIZ;
static const int _IO_va_list = _G_va_list;
static const int _IO_wint_t = _G_wint_t;
typedef __builtin_va_list __gnuc_va_list;
static const int _IO_va_list = __gnuc_va_list;
static const int _PARAMS(protos) = __P(protos);
static const int _IO_UNIFIED_JUMPTABLES = 1;
static const int EOF = (-1);
static const int _IOS_INPUT = 1;
static const int _IOS_OUTPUT = 2;
static const int _IOS_ATEND = 4;
static const int _IOS_APPEND = 8;
static const int _IOS_TRUNC = 16;
static const int _IOS_NOCREATE = 32;
static const int _IOS_NOREPLACE = 64;
static const int _IOS_BIN = 128;
static const int _IO_MAGIC = 0xFBAD0000;
static const int _OLD_STDIO_MAGIC = 0xFABC0000;
static const int _IO_MAGIC_MASK = 0xFFFF0000;
static const int _IO_USER_BUF = 1;
static const int _IO_UNBUFFERED = 2;
static const int _IO_NO_READS = 4;
static const int _IO_NO_WRITES = 8;
static const int _IO_EOF_SEEN = 0x10;
static const int _IO_ERR_SEEN = 0x20;
static const int _IO_DELETE_DONT_CLOSE = 0x40;
static const int _IO_LINKED = 0x80;
static const int _IO_IN_BACKUP = 0x100;
static const int _IO_LINE_BUF = 0x200;
static const int _IO_TIED_PUT_GET = 0x400;
static const int _IO_CURRENTLY_PUTTING = 0x800;
static const int _IO_IS_APPENDING = 0x1000;
static const int _IO_IS_FILEBUF = 0x2000;
static const int _IO_BAD_SEEN = 0x4000;
static const int _IO_USER_LOCK = 0x8000;
static const int _IO_FLAGS2_MMAP = 1;
static const int _IO_FLAGS2_NOTCANCEL = 2;
static const int _IO_FLAGS2_USER_WBUF = 8;
static const int _IO_SKIPWS = 01;
static const int _IO_LEFT = 02;
static const int _IO_RIGHT = 04;
static const int _IO_INTERNAL = 010;
static const int _IO_DEC = 020;
static const int _IO_OCT = 040;
static const int _IO_HEX = 0100;
static const int _IO_SHOWBASE = 0200;
static const int _IO_SHOWPOINT = 0400;
static const int _IO_UPPERCASE = 01000;
static const int _IO_SHOWPOS = 02000;
static const int _IO_SCIENTIFIC = 04000;
static const int _IO_FIXED = 010000;
static const int _IO_UNITBUF = 020000;
static const int _IO_STDIO = 040000;
static const int _IO_DONT_CLOSE = 0100000;
static const int _IO_BOOLALPHA = 0200000;
struct _IO_jump_t; struct _IO_FILE;
typedef void _IO_lock_t;
struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;
  int _pos;
};
enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
struct _IO_FILE {
  int _flags;
static const int _IO_file_flags = _flags;
  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;
  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;
  struct _IO_marker *_markers;
  struct _IO_FILE *_chain;
  int _fileno;
  int _flags2;
  __off_t _old_offset;
  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];
  _IO_lock_t *_lock;
  __off64_t _offset;
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;
  int _mode;
  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
typedef struct _IO_FILE _IO_FILE;
struct _IO_FILE_plus;
extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
static const int _IO_stdin = ((_IO_FILE*)(&_IO_2_1_stdin_));
static const int _IO_stdout = ((_IO_FILE*)(&_IO_2_1_stdout_));
static const int _IO_stderr = ((_IO_FILE*)(&_IO_2_1_stderr_));
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);
typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);
typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);
typedef int __io_close_fn (void *__cookie);
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
static const int _IO_BE(expr,res) = __builtin_expect ((expr), res);
static const int _IO_getc_unlocked(_fp) = (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++);
static const int _IO_peekc_unlocked(_fp) = (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr);
static const int _IO_putc_unlocked(_ch,_fp) = (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)));
static const int _IO_feof_unlocked(__fp) = (((__fp)->_flags & _IO_EOF_SEEN) != 0);
static const int _IO_ferror_unlocked(__fp) = (((__fp)->_flags & _IO_ERR_SEEN) != 0);
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_peekc_locked (_IO_FILE *__fp);
static const int _IO_PENDING_OUTPUT_COUNT(_fp) = ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base);
extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
static const int _IO_peekc(_fp) = _IO_peekc_unlocked (_fp);
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);
extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);
extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
typedef __gnuc_va_list va_list;
typedef __off_t off_t;
typedef __ssize_t ssize_t;
typedef _G_fpos_t fpos_t;
static const int _IOFBF = 0;
static const int _IOLBF = 1;
static const int _IONBF = 2;
static const int BUFSIZ = _IO_BUFSIZ;
static const int SEEK_SET = 0;
static const int SEEK_CUR = 1;
static const int SEEK_END = 2;
static const char P_tmpdir = "/tmp";
static const int L_tmpnam = 20;
static const int TMP_MAX = 238328;
static const int FILENAME_MAX = 4096;
static const int L_ctermid = 9;
static const int FOPEN_MAX = 16;
extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;
static const int stdin = stdin;
static const int stdout = stdout;
static const int stderr = stderr;
extern int remove (__const char *__filename) __attribute__ ((__nothrow__ , __leaf__));
extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__ , __leaf__));
extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) __attribute__ ((__nothrow__ , __leaf__));
extern FILE *tmpfile (void) ;
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;
extern int fclose (FILE *__stream);
extern int fflush (FILE *__stream);
extern int fflush_unlocked (FILE *__stream);
extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes) ;
extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream) ;
extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;
extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;
extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));
extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));
extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));
extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);
extern int printf (__const char *__restrict __format, ...);
extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));
extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);
extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);
extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));
extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));
extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;
extern int scanf (__const char *__restrict __format, ...) ;
extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int fscanf (FILE *__restrict __stream, __const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf") ;
extern int scanf (__const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf") ;
extern int sscanf (__const char *__restrict __s, __const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__));
extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (__const char *__restrict __s, __const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__format__ (__scanf__, 2, 0)));
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);
extern int getchar (void);
static const int getc(_fp) = _IO_getc (_fp);
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
extern int fgetc_unlocked (FILE *__stream);
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);
extern int putchar (int __c);
static const int putc(_ch,_fp) = _IO_putc (_ch, _fp);
extern int fputc_unlocked (int __c, FILE *__stream);
extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);
extern int getw (FILE *__stream);
extern int putw (int __w, FILE *__stream);
extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
extern char *gets (char *__s) ;
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;
extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;
extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);
extern int puts (__const char *__s);
extern int ungetc (int __c, FILE *__stream);
extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);
extern int fseek (FILE *__stream, long int __off, int __whence);
extern long int ftell (FILE *__stream) ;
extern void rewind (FILE *__stream);
extern int fseeko (FILE *__stream, __off_t __off, int __whence);
extern __off_t ftello (FILE *__stream) ;
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);
extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern void perror (__const char *__s);
extern int sys_nerr;
extern __const char *__const sys_errlist[];
extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern FILE *popen (__const char *__command, __const char *__modes) ;
extern int pclose (FILE *__stream);
extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
